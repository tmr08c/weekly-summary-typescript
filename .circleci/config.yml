# https://github.com/sbstjn/typescript-npm-boilerplate/blob/master/.circleci/config.yml

# Use the latest 2.1 version of CircleCI pipeline processing engine, see https://circleci.com/docs/2.0/configuration-reference/
version: 2.1

# # Use a package of configuration called an orb, see https://circleci.com/docs/2.0/orb-intro/
# orbs:
#   # Declare a dependency on the welcome-orb
#   welcome: circleci/welcome-orb@0.3.1

# # Orchestrate or schedule a set of jobs, see https://circleci.com/docs/2.0/workflows/
# workflows:
#   # Name the workflow "Welcome"
#   Welcome:
#     # Run the welcome/run job in its own container
#     jobs:
#       - welcome/run

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:10

whitelist: &whitelist
  paths:
    - .npmignore
    - coverage/*
    - dist/*
    - node_modules/*
    - src/*
    - test/*
    - CODE_OF_CONDUCT.md
    - LICENSE.md
    - package.json
    - README.md
    - tsconfig.json
    - tslint.json
    - jest.config.js
    - types/*

jobs:
  checkout:
    <<: *defaults

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-

      - run:
          name: Install Dependencies
          command: npm ci

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - persist_to_workspace:
          root: ~/repo
          <<: *whitelist

  lint:
    <<: *defaults

    steps:
      - attach_workspace:
          at: ~/repo

      - run:
          name: Lint TypeScript code
          command: npm run lint

  test:
    <<: *defaults

    steps:
      - attach_workspace:
          at: ~/repo

      - run:
          name: Test TypeScript code and get coverage
          command: npm run test:coverage

      - persist_to_workspace:
          root: ~/repo
          <<: *whitelist

  coveralls:
    <<: *defaults

    steps:
      - attach_workspace:
          at: ~/repo

      - run:
          name: Submit coverage report to Coveralls.io
          command: npm run coveralls

  build:
    <<: *defaults

    steps:
      - attach_workspace:
          at: ~/repo

      - run:
          name: Build TypeScript code
          command: npm run build

      - persist_to_workspace:
          root: ~/repo
          <<: *whitelist

  # deploy:
  #   <<: *defaults
  #   steps:
  #     - attach_workspace:
  #         at: ~/repo
  #     - run:
  #         name: Write NPM Token to ~/.npmrc
  #         command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
  #     - run:
  #         name: Install dot-json package
  #         command: npm install dot-json
  #     - run:
  #         name: Write version to package.json
  #         command: $(yarn bin)/dot-json package.json version ${CIRCLE_TAG:1}
  #     - run:
  #         name: Publish to NPM
  #         command: npm publish --access=public

workflows:
  # version: 2.1

  build:
    jobs:
      - checkout
      - test:
          requires:
            - checkout
      - lint:
          requires:
            - checkout
      - coveralls:
          requires:
            - test
      - build:
          requires:
            - test
            - lint
  # release:
  #   jobs:
  #     - checkout:
  #         filters:
  #           tags:
  #             only: /v[0-9]+(\.[0-9]+)*/
  #           branches:
  #             ignore: /.*/
  #     - test:
  #         filters:
  #           tags:
  #             only: /v[0-9]+(\.[0-9]+)*/
  #           branches:
  #             ignore: /.*/
  #         requires:
  #           - checkout
  #     - lint:
  #         filters:
  #           tags:
  #             only: /v[0-9]+(\.[0-9]+)*/
  #           branches:
  #             ignore: /.*/
  #         requires:
  #           - checkout
  #     - coveralls:
  #         filters:
  #           tags:
  #             only: /v[0-9]+(\.[0-9]+)*/
  #           branches:
  #             ignore: /.*/
  #         requires:
  #           - test
  #     - build:
  #         filters:
  #           tags:
  #             only: /v[0-9]+(\.[0-9]+)*/
  #           branches:
  #             ignore: /.*/
  #         requires:
  #           - test
  #           - lint
  #     - deploy:
  #         filters:
  #           tags:
  #             only: /v[0-9]+(\.[0-9]+)*/
  #           branches:
  #             ignore: /.*/
  #         requires:
  #           - build
